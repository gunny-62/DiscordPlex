name: CMake on multiple platforms

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.label }}-${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            cpp_compiler: g++
            vcpkg_triplet: x64-linux
            label: gcc

          - os: ubuntu-latest
            cpp_compiler: clang++
            vcpkg_triplet: x64-linux
            label: clang

          - os: windows-latest
            cpp_compiler: cl
            vcpkg_triplet: x64-windows
            label: msvc

          - os: macos-latest
            cpp_compiler: clang++
            vcpkg_triplet: arm64-osx
            label: clang

    steps:
      - uses: actions/checkout@v4

      - name: run-vcpkg
        uses: lukka/run-vcpkg@v11

      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        shell: bash
        run: |
          cmake -B "${{ steps.strings.outputs.build-output-dir }}" \
                -S "${{ github.workspace }}" \
                -DCMAKE_CXX_COMPILER="${{ matrix.cpp_compiler }}" \
                -DCMAKE_BUILD_TYPE="${{ matrix.build_type }}" \
                -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
                -DVCPKG_TARGET_TRIPLET="${{ matrix.vcpkg_triplet }}"

      - name: Build
        shell: bash
        run: cmake --build "${{ steps.strings.outputs.build-output-dir }}" --config "${{ matrix.build_type }}"
